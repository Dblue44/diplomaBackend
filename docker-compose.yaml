version: "1.1"

services:
  server:
    container_name: diploma_backend
    image: diploma
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80", "--reload" ]
    restart: unless-stopped
    volumes:
      - ./logs/backend:/opt/logs
    ports:
      - '8085:80'
    env_file:
      - .env
    depends_on:
      - mongodb
      - tf-serving

  mongodb:
    container_name: mongodb
    image: mongo:7.0.8-jammy
    restart: unless-stopped
    env_file:
      - .dbenv
    ports:
      - '28017:27017'
    volumes:
      - db-data:/data/db

  tf-serving:
    container_name: tf-serving
    image: tensorflow/serving
    restart: unless-stopped
    ports:
      - '8500:8500'
      - '8501:8501'
    volumes:
      - ./models/cnn_model:/models/cnn_model
      - ./serving-docker.config:/models/models.config
    command: --model_config_file=/models/models.config

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - server

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    restart: unless-stopped
    command: certonly --webroot --webroot-path=/var/www/certbot --force-renewal --email stakheev12@mail.ru --agree-tos --no-eff-email --staging -d diploma-susu-24.ru
    volumes:
      - etc-letcencrypt:/etc/letsencrypt
      - ./nginx/:/etc/nginx/
    depends_on:
      - nginx

volumes:
  etc-letcencrypt:
    driver: local
  grafana-data:
    driver: local
  db-data:
    driver: local